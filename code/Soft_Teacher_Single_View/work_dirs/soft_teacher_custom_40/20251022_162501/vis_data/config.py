backend_args = None
batch_size = 4
branch_field = [
    'sup',
    'unsup_teacher',
    'unsup_student',
]
color_space = [
    [
        dict(prob=0.5, type='AutoContrast'),
    ],
    [
        dict(prob=0.4, type='Equalize'),
    ],
    [
        dict(level=7, max_mag=1.25, min_mag=0.8, prob=0.7, type='Brightness'),
    ],
    [
        dict(level=7, max_mag=1.3, min_mag=0.8, prob=0.7, type='Contrast'),
    ],
    [
        dict(level=6, max_mag=1.5, min_mag=0.8, prob=0.3, type='Sharpness'),
    ],
]
custom_hooks = [
    dict(momentum=0.999, type='MeanTeacherHook'),
]
data_root = '/home/coder/trong/KLTN_SEMI/code/data_mmdetection/coco/'
dataset_type = 'CocoDataset'
default_hooks = dict(
    checkpoint=dict(interval=1, type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='DetVisualizationHook'))
default_scope = 'mmdet'
detector = dict(
    backbone=dict(
        depth=50,
        frozen_stages=1,
        init_cfg=dict(
            checkpoint='open-mmlab://detectron2/resnet50_caffe',
            type='Pretrained'),
        norm_cfg=dict(requires_grad=False, type='BN'),
        norm_eval=True,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        style='caffe',
        type='ResNet'),
    data_preprocessor=dict(
        bgr_to_rgb=False,
        mean=[
            103.53,
            116.28,
            123.675,
        ],
        pad_size_divisor=16,
        std=[
            1.0,
            1.0,
            1.0,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        in_channels=[
            256,
            512,
            1024,
            2048,
        ],
        num_outs=5,
        out_channels=256,
        type='FPN'),
    roi_head=dict(
        bbox_head=dict(
            bbox_coder=dict(
                target_means=[
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                ],
                target_stds=[
                    0.1,
                    0.1,
                    0.2,
                    0.2,
                ],
                type='DeltaXYWHBBoxCoder'),
            fc_out_channels=1024,
            in_channels=256,
            loss_bbox=dict(loss_weight=1.0, type='L1Loss'),
            loss_cls=dict(
                loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
            num_classes=5,
            reg_class_agnostic=False,
            roi_feat_size=7,
            type='Shared2FCBBoxHead'),
        bbox_roi_extractor=dict(
            featmap_strides=[
                4,
                8,
                16,
                32,
            ],
            out_channels=256,
            roi_layer=dict(output_size=7, sampling_ratio=0, type='RoIAlign'),
            type='SingleRoIExtractor'),
        type='StandardRoIHead'),
    rpn_head=dict(
        anchor_generator=dict(
            ratios=[
                0.25,
                0.5,
                1.0,
                2.0,
                4.0,
            ],
            scales=[
                8,
            ],
            strides=[
                4,
                8,
                16,
                32,
                64,
            ],
            type='AnchorGenerator'),
        bbox_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                1.0,
                1.0,
                1.0,
                1.0,
            ],
            type='DeltaXYWHBBoxCoder'),
        feat_channels=256,
        in_channels=256,
        loss_bbox=dict(loss_weight=1.0, type='L1Loss'),
        loss_cls=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=True),
        type='RPNHead'),
    test_cfg=dict(
        rcnn=dict(
            max_per_img=100,
            nms=dict(iou_threshold=0.5, type='nms'),
            score_thr=0.05),
        rpn=dict(
            max_per_img=1000,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.5, type='nms'),
            nms_pre=1000)),
    train_cfg=dict(
        rcnn=dict(
            assigner=dict(
                ignore_iof_thr=-1,
                match_low_quality=False,
                min_pos_iou=0.5,
                neg_iou_thr=0.5,
                pos_iou_thr=0.5,
                type='MaxIoUAssigner'),
            debug=False,
            pos_weight=-1,
            sampler=dict(
                add_gt_as_proposals=True,
                neg_pos_ub=-1,
                num=512,
                pos_fraction=0.25,
                type='RandomSampler')),
        rpn=dict(
            allowed_border=-1,
            assigner=dict(
                ignore_iof_thr=-1,
                match_low_quality=True,
                min_pos_iou=0.3,
                neg_iou_thr=0.3,
                pos_iou_thr=0.7,
                type='MaxIoUAssigner'),
            debug=False,
            pos_weight=-1,
            sampler=dict(
                add_gt_as_proposals=False,
                neg_pos_ub=-1,
                num=256,
                pos_fraction=0.5,
                type='RandomSampler')),
        rpn_proposal=dict(
            max_per_img=1000,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.7, type='nms'),
            nms_pre=2000)),
    type='FasterRCNN')
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
geometric = [
    [
        dict(level=7, max_mag=5.0, min_mag=0.0, prob=0.3, type='Rotate'),
    ],
    [
        dict(level=7, max_mag=3.0, min_mag=0.0, prob=0.3, type='ShearX'),
    ],
    [
        dict(level=7, max_mag=3.0, min_mag=0.0, prob=0.3, type='ShearY'),
    ],
    [
        dict(level=7, max_mag=0.05, min_mag=0.0, prob=0.3, type='TranslateX'),
    ],
    [
        dict(level=7, max_mag=0.05, min_mag=0.0, prob=0.3, type='TranslateY'),
    ],
]
labeled_dataset = dict(
    ann_file='semi_anns/instances_train2017.1@40.0.json',
    backend_args=None,
    data_prefix=dict(img='train/'),
    data_root='/home/coder/trong/KLTN_SEMI/code/data_mmdetection/coco/',
    filter_cfg=dict(filter_empty_gt=True, min_size=8),
    metainfo=dict(
        classes=(
            'Gay',
            'Me',
            'Mon_dau',
            'Ri_set',
            'Xuoc',
        ),
        palette=[
            (
                134,
                34,
                255,
            ),
            (
                0,
                255,
                206,
            ),
            (
                255,
                128,
                0,
            ),
            (
                254,
                0,
                86,
            ),
            (
                199,
                252,
                0,
            ),
        ]),
    pipeline=[
        dict(backend_args=None, type='LoadImageFromFile'),
        dict(type='LoadAnnotations', with_bbox=True),
        dict(
            keep_ratio=True,
            scale=[
                (
                    128,
                    360,
                ),
                (
                    256,
                    720,
                ),
            ],
            type='RandomResize'),
        dict(prob=0.5, type='RandomFlip'),
        dict(
            aug_num=1,
            aug_space=[
                [
                    dict(prob=0.5, type='AutoContrast'),
                ],
                [
                    dict(prob=0.4, type='Equalize'),
                ],
                [
                    dict(
                        level=7,
                        max_mag=1.25,
                        min_mag=0.8,
                        prob=0.7,
                        type='Brightness'),
                ],
                [
                    dict(
                        level=5,
                        max_mag=1.3,
                        min_mag=0.8,
                        prob=0.7,
                        type='Contrast'),
                ],
                [
                    dict(
                        level=6,
                        max_mag=1.5,
                        min_mag=0.8,
                        prob=0.3,
                        type='Sharpness'),
                ],
            ],
            type='RandAugment'),
        dict(min_gt_bbox_wh=(
            0.01,
            0.01,
        ), type='FilterAnnotations'),
        dict(
            branch_field=[
                'sup',
                'unsup_teacher',
                'unsup_student',
            ],
            sup=dict(type='PackDetInputs'),
            type='MultiBranch'),
    ],
    type='CocoDataset')
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
metainfo = dict(
    classes=(
        'Gay',
        'Me',
        'Mon_dau',
        'Ri_set',
        'Xuoc',
    ),
    palette=[
        (
            134,
            34,
            255,
        ),
        (
            0,
            255,
            206,
        ),
        (
            255,
            128,
            0,
        ),
        (
            254,
            0,
            86,
        ),
        (
            199,
            252,
            0,
        ),
    ])
model = dict(
    data_preprocessor=dict(
        data_preprocessor=dict(
            bgr_to_rgb=False,
            mean=[
                103.53,
                116.28,
                123.675,
            ],
            pad_size_divisor=16,
            std=[
                1.0,
                1.0,
                1.0,
            ],
            type='DetDataPreprocessor'),
        type='MultiBranchDataPreprocessor'),
    detector=dict(
        backbone=dict(
            depth=50,
            frozen_stages=1,
            init_cfg=dict(
                checkpoint='open-mmlab://detectron2/resnet50_caffe',
                type='Pretrained'),
            norm_cfg=dict(requires_grad=False, type='BN'),
            norm_eval=True,
            num_stages=4,
            out_indices=(
                0,
                1,
                2,
                3,
            ),
            style='caffe',
            type='ResNet'),
        data_preprocessor=dict(
            bgr_to_rgb=False,
            mean=[
                103.53,
                116.28,
                123.675,
            ],
            pad_size_divisor=16,
            std=[
                1.0,
                1.0,
                1.0,
            ],
            type='DetDataPreprocessor'),
        neck=dict(
            in_channels=[
                256,
                512,
                1024,
                2048,
            ],
            num_outs=5,
            out_channels=256,
            type='FPN'),
        roi_head=dict(
            bbox_head=dict(
                bbox_coder=dict(
                    target_means=[
                        0.0,
                        0.0,
                        0.0,
                        0.0,
                    ],
                    target_stds=[
                        0.1,
                        0.1,
                        0.2,
                        0.2,
                    ],
                    type='DeltaXYWHBBoxCoder'),
                fc_out_channels=1024,
                in_channels=256,
                loss_bbox=dict(loss_weight=1.0, type='L1Loss'),
                loss_cls=dict(
                    loss_weight=1.0,
                    type='CrossEntropyLoss',
                    use_sigmoid=False),
                num_classes=5,
                reg_class_agnostic=False,
                roi_feat_size=7,
                type='Shared2FCBBoxHead'),
            bbox_roi_extractor=dict(
                featmap_strides=[
                    4,
                    8,
                    16,
                    32,
                ],
                out_channels=256,
                roi_layer=dict(
                    output_size=7, sampling_ratio=0, type='RoIAlign'),
                type='SingleRoIExtractor'),
            type='StandardRoIHead'),
        rpn_head=dict(
            anchor_generator=dict(
                ratios=[
                    0.25,
                    0.5,
                    1.0,
                    2.0,
                    4.0,
                ],
                scales=[
                    8,
                ],
                strides=[
                    4,
                    8,
                    16,
                    32,
                    64,
                ],
                type='AnchorGenerator'),
            bbox_coder=dict(
                target_means=[
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                ],
                target_stds=[
                    1.0,
                    1.0,
                    1.0,
                    1.0,
                ],
                type='DeltaXYWHBBoxCoder'),
            feat_channels=256,
            in_channels=256,
            loss_bbox=dict(loss_weight=1.0, type='L1Loss'),
            loss_cls=dict(
                loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=True),
            type='RPNHead'),
        test_cfg=dict(
            rcnn=dict(
                max_per_img=100,
                nms=dict(iou_threshold=0.5, type='nms'),
                score_thr=0.05),
            rpn=dict(
                max_per_img=1000,
                min_bbox_size=0,
                nms=dict(iou_threshold=0.5, type='nms'),
                nms_pre=1000)),
        train_cfg=dict(
            rcnn=dict(
                assigner=dict(
                    ignore_iof_thr=-1,
                    match_low_quality=False,
                    min_pos_iou=0.5,
                    neg_iou_thr=0.5,
                    pos_iou_thr=0.5,
                    type='MaxIoUAssigner'),
                debug=False,
                pos_weight=-1,
                sampler=dict(
                    add_gt_as_proposals=True,
                    neg_pos_ub=-1,
                    num=512,
                    pos_fraction=0.25,
                    type='RandomSampler')),
            rpn=dict(
                allowed_border=-1,
                assigner=dict(
                    ignore_iof_thr=-1,
                    match_low_quality=True,
                    min_pos_iou=0.3,
                    neg_iou_thr=0.3,
                    pos_iou_thr=0.7,
                    type='MaxIoUAssigner'),
                debug=False,
                pos_weight=-1,
                sampler=dict(
                    add_gt_as_proposals=False,
                    neg_pos_ub=-1,
                    num=256,
                    pos_fraction=0.5,
                    type='RandomSampler')),
            rpn_proposal=dict(
                max_per_img=1000,
                min_bbox_size=0,
                nms=dict(iou_threshold=0.7, type='nms'),
                nms_pre=2000)),
        type='FasterRCNN'),
    semi_test_cfg=dict(predict_on='teacher'),
    semi_train_cfg=dict(
        cls_pseudo_thr=0.4,
        freeze_teacher=True,
        jitter_scale=0.03,
        jitter_times=5,
        min_pseudo_bbox_wh=(
            0.01,
            0.01,
        ),
        pseudo_label_initial_score_thr=0.3,
        reg_pseudo_thr=0.02,
        rpn_pseudo_thr=0.4,
        sup_weight=1.0,
        unsup_weight=1.0),
    type='SoftTeacher')
num_workers = 4
optim_wrapper = dict(
    optimizer=dict(lr=0.001, momentum=0.9, type='SGD', weight_decay=0.0001),
    type='OptimWrapper')
param_scheduler = [
    dict(begin=0, by_epoch=False, end=500, start_factor=0.01, type='LinearLR'),
]
resume = False
scale = [
    (
        128,
        360,
    ),
    (
        512,
        1440,
    ),
]
strong_pipeline = [
    dict(
        keep_ratio=True,
        scale=[
            (
                128,
                360,
            ),
            (
                256,
                720,
            ),
        ],
        type='RandomResize'),
    dict(prob=0.5, type='RandomFlip'),
    dict(
        transforms=[
            dict(
                aug_num=1,
                aug_space=[
                    [
                        dict(prob=0.5, type='AutoContrast'),
                    ],
                    [
                        dict(prob=0.4, type='Equalize'),
                    ],
                    [
                        dict(
                            level=7,
                            max_mag=1.25,
                            min_mag=0.8,
                            prob=0.7,
                            type='Brightness'),
                    ],
                    [
                        dict(
                            level=5,
                            max_mag=1.3,
                            min_mag=0.8,
                            prob=0.7,
                            type='Contrast'),
                    ],
                    [
                        dict(
                            level=6,
                            max_mag=1.5,
                            min_mag=0.8,
                            prob=0.3,
                            type='Sharpness'),
                    ],
                ],
                type='RandAugment'),
            dict(
                aug_num=1,
                aug_space=[
                    [
                        dict(
                            level=7,
                            max_mag=5.0,
                            min_mag=0.0,
                            prob=0.3,
                            type='Rotate'),
                    ],
                    [
                        dict(
                            level=7,
                            max_mag=3.0,
                            min_mag=0.0,
                            prob=0.3,
                            type='ShearX'),
                    ],
                    [
                        dict(
                            level=7,
                            max_mag=3.0,
                            min_mag=0.0,
                            prob=0.3,
                            type='ShearY'),
                    ],
                    [
                        dict(
                            level=7,
                            max_mag=0.05,
                            min_mag=0.0,
                            prob=0.3,
                            type='TranslateX'),
                    ],
                    [
                        dict(
                            level=7,
                            max_mag=0.05,
                            min_mag=0.0,
                            prob=0.3,
                            type='TranslateY'),
                    ],
                ],
                type='RandAugment'),
        ],
        type='RandomOrder'),
    dict(n_patches=(
        1,
        3,
    ), ratio=(
        0,
        0.15,
    ), type='RandomErasing'),
    dict(min_gt_bbox_wh=(
        0.01,
        0.01,
    ), type='FilterAnnotations'),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
            'flip',
            'flip_direction',
            'homography_matrix',
        ),
        type='PackDetInputs'),
]
sup_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        keep_ratio=True,
        scale=[
            (
                128,
                360,
            ),
            (
                256,
                720,
            ),
        ],
        type='RandomResize'),
    dict(prob=0.5, type='RandomFlip'),
    dict(
        aug_num=1,
        aug_space=[
            [
                dict(prob=0.5, type='AutoContrast'),
            ],
            [
                dict(prob=0.4, type='Equalize'),
            ],
            [
                dict(
                    level=7,
                    max_mag=1.25,
                    min_mag=0.8,
                    prob=0.7,
                    type='Brightness'),
            ],
            [
                dict(
                    level=5,
                    max_mag=1.3,
                    min_mag=0.8,
                    prob=0.7,
                    type='Contrast'),
            ],
            [
                dict(
                    level=6,
                    max_mag=1.5,
                    min_mag=0.8,
                    prob=0.3,
                    type='Sharpness'),
            ],
        ],
        type='RandAugment'),
    dict(min_gt_bbox_wh=(
        0.01,
        0.01,
    ), type='FilterAnnotations'),
    dict(
        branch_field=[
            'sup',
            'unsup_teacher',
            'unsup_student',
        ],
        sup=dict(type='PackDetInputs'),
        type='MultiBranch'),
]
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='annotations/instances_valid2017.json',
        backend_args=None,
        data_prefix=dict(img='valid/'),
        data_root='/home/coder/trong/KLTN_SEMI/code/data_mmdetection/coco/',
        metainfo=dict(
            classes=(
                'Gay',
                'Me',
                'Mon_dau',
                'Ri_set',
                'Xuoc',
            ),
            palette=[
                (
                    134,
                    34,
                    255,
                ),
                (
                    0,
                    255,
                    206,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    254,
                    0,
                    86,
                ),
                (
                    199,
                    252,
                    0,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                256,
                720,
            ), type='Resize'),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    ann_file=
    '/home/coder/trong/KLTN_SEMI/code/data_mmdetection/coco/annotations/instances_valid2017.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        256,
        720,
    ), type='Resize'),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(max_iters=60000, type='IterBasedTrainLoop', val_interval=5000)
train_dataloader = dict(
    batch_size=4,
    dataset=dict(
        datasets=[
            dict(
                ann_file='semi_anns/instances_train2017.1@40.0.json',
                backend_args=None,
                data_prefix=dict(img='train/'),
                data_root=
                '/home/coder/trong/KLTN_SEMI/code/data_mmdetection/coco/',
                filter_cfg=dict(filter_empty_gt=True, min_size=8),
                metainfo=dict(
                    classes=(
                        'Gay',
                        'Me',
                        'Mon_dau',
                        'Ri_set',
                        'Xuoc',
                    ),
                    palette=[
                        (
                            134,
                            34,
                            255,
                        ),
                        (
                            0,
                            255,
                            206,
                        ),
                        (
                            255,
                            128,
                            0,
                        ),
                        (
                            254,
                            0,
                            86,
                        ),
                        (
                            199,
                            252,
                            0,
                        ),
                    ]),
                pipeline=[
                    dict(backend_args=None, type='LoadImageFromFile'),
                    dict(type='LoadAnnotations', with_bbox=True),
                    dict(
                        keep_ratio=True,
                        scale=[
                            (
                                128,
                                360,
                            ),
                            (
                                256,
                                720,
                            ),
                        ],
                        type='RandomResize'),
                    dict(prob=0.5, type='RandomFlip'),
                    dict(
                        aug_num=1,
                        aug_space=[
                            [
                                dict(prob=0.5, type='AutoContrast'),
                            ],
                            [
                                dict(prob=0.4, type='Equalize'),
                            ],
                            [
                                dict(
                                    level=7,
                                    max_mag=1.25,
                                    min_mag=0.8,
                                    prob=0.7,
                                    type='Brightness'),
                            ],
                            [
                                dict(
                                    level=5,
                                    max_mag=1.3,
                                    min_mag=0.8,
                                    prob=0.7,
                                    type='Contrast'),
                            ],
                            [
                                dict(
                                    level=6,
                                    max_mag=1.5,
                                    min_mag=0.8,
                                    prob=0.3,
                                    type='Sharpness'),
                            ],
                        ],
                        type='RandAugment'),
                    dict(
                        min_gt_bbox_wh=(
                            0.01,
                            0.01,
                        ),
                        type='FilterAnnotations'),
                    dict(
                        branch_field=[
                            'sup',
                            'unsup_teacher',
                            'unsup_student',
                        ],
                        sup=dict(type='PackDetInputs'),
                        type='MultiBranch'),
                ],
                type='CocoDataset'),
            dict(
                ann_file='semi_anns/instances_train2017.1@40.0-unlabeled.json',
                backend_args=None,
                data_prefix=dict(img='train/'),
                data_root=
                '/home/coder/trong/KLTN_SEMI/code/data_mmdetection/coco/',
                filter_cfg=dict(filter_empty_gt=False, min_size=8),
                metainfo=dict(
                    classes=(
                        'Gay',
                        'Me',
                        'Mon_dau',
                        'Ri_set',
                        'Xuoc',
                    ),
                    palette=[
                        (
                            134,
                            34,
                            255,
                        ),
                        (
                            0,
                            255,
                            206,
                        ),
                        (
                            255,
                            128,
                            0,
                        ),
                        (
                            254,
                            0,
                            86,
                        ),
                        (
                            199,
                            252,
                            0,
                        ),
                    ]),
                pipeline=[
                    dict(backend_args=None, type='LoadImageFromFile'),
                    dict(type='LoadEmptyAnnotations'),
                    dict(
                        branch_field=[
                            'sup',
                            'unsup_teacher',
                            'unsup_student',
                        ],
                        type='MultiBranch',
                        unsup_student=[
                            dict(
                                keep_ratio=True,
                                scale=[
                                    (
                                        128,
                                        360,
                                    ),
                                    (
                                        256,
                                        720,
                                    ),
                                ],
                                type='RandomResize'),
                            dict(prob=0.5, type='RandomFlip'),
                            dict(
                                transforms=[
                                    dict(
                                        aug_num=1,
                                        aug_space=[
                                            [
                                                dict(
                                                    prob=0.5,
                                                    type='AutoContrast'),
                                            ],
                                            [
                                                dict(
                                                    prob=0.4, type='Equalize'),
                                            ],
                                            [
                                                dict(
                                                    level=7,
                                                    max_mag=1.25,
                                                    min_mag=0.8,
                                                    prob=0.7,
                                                    type='Brightness'),
                                            ],
                                            [
                                                dict(
                                                    level=5,
                                                    max_mag=1.3,
                                                    min_mag=0.8,
                                                    prob=0.7,
                                                    type='Contrast'),
                                            ],
                                            [
                                                dict(
                                                    level=6,
                                                    max_mag=1.5,
                                                    min_mag=0.8,
                                                    prob=0.3,
                                                    type='Sharpness'),
                                            ],
                                        ],
                                        type='RandAugment'),
                                    dict(
                                        aug_num=1,
                                        aug_space=[
                                            [
                                                dict(
                                                    level=7,
                                                    max_mag=5.0,
                                                    min_mag=0.0,
                                                    prob=0.3,
                                                    type='Rotate'),
                                            ],
                                            [
                                                dict(
                                                    level=7,
                                                    max_mag=3.0,
                                                    min_mag=0.0,
                                                    prob=0.3,
                                                    type='ShearX'),
                                            ],
                                            [
                                                dict(
                                                    level=7,
                                                    max_mag=3.0,
                                                    min_mag=0.0,
                                                    prob=0.3,
                                                    type='ShearY'),
                                            ],
                                            [
                                                dict(
                                                    level=7,
                                                    max_mag=0.05,
                                                    min_mag=0.0,
                                                    prob=0.3,
                                                    type='TranslateX'),
                                            ],
                                            [
                                                dict(
                                                    level=7,
                                                    max_mag=0.05,
                                                    min_mag=0.0,
                                                    prob=0.3,
                                                    type='TranslateY'),
                                            ],
                                        ],
                                        type='RandAugment'),
                                ],
                                type='RandomOrder'),
                            dict(
                                n_patches=(
                                    1,
                                    3,
                                ),
                                ratio=(
                                    0,
                                    0.15,
                                ),
                                type='RandomErasing'),
                            dict(
                                min_gt_bbox_wh=(
                                    0.01,
                                    0.01,
                                ),
                                type='FilterAnnotations'),
                            dict(
                                meta_keys=(
                                    'img_id',
                                    'img_path',
                                    'ori_shape',
                                    'img_shape',
                                    'scale_factor',
                                    'flip',
                                    'flip_direction',
                                    'homography_matrix',
                                ),
                                type='PackDetInputs'),
                        ],
                        unsup_teacher=[
                            dict(
                                keep_ratio=True,
                                scale=[
                                    (
                                        128,
                                        360,
                                    ),
                                    (
                                        256,
                                        720,
                                    ),
                                ],
                                type='RandomResize'),
                            dict(prob=0.5, type='RandomFlip'),
                            dict(
                                meta_keys=(
                                    'img_id',
                                    'img_path',
                                    'ori_shape',
                                    'img_shape',
                                    'scale_factor',
                                    'flip',
                                    'flip_direction',
                                    'homography_matrix',
                                ),
                                type='PackDetInputs'),
                        ]),
                ],
                type='CocoDataset'),
        ],
        type='ConcatDataset'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(
        batch_size=4, source_ratio=[
            1,
            3,
        ], type='GroupMultiSourceSampler'))
unlabeled_dataset = dict(
    ann_file='semi_anns/instances_train2017.1@40.0-unlabeled.json',
    backend_args=None,
    data_prefix=dict(img='train/'),
    data_root='/home/coder/trong/KLTN_SEMI/code/data_mmdetection/coco/',
    filter_cfg=dict(filter_empty_gt=False, min_size=8),
    metainfo=dict(
        classes=(
            'Gay',
            'Me',
            'Mon_dau',
            'Ri_set',
            'Xuoc',
        ),
        palette=[
            (
                134,
                34,
                255,
            ),
            (
                0,
                255,
                206,
            ),
            (
                255,
                128,
                0,
            ),
            (
                254,
                0,
                86,
            ),
            (
                199,
                252,
                0,
            ),
        ]),
    pipeline=[
        dict(backend_args=None, type='LoadImageFromFile'),
        dict(type='LoadEmptyAnnotations'),
        dict(
            branch_field=[
                'sup',
                'unsup_teacher',
                'unsup_student',
            ],
            type='MultiBranch',
            unsup_student=[
                dict(
                    keep_ratio=True,
                    scale=[
                        (
                            128,
                            360,
                        ),
                        (
                            256,
                            720,
                        ),
                    ],
                    type='RandomResize'),
                dict(prob=0.5, type='RandomFlip'),
                dict(
                    transforms=[
                        dict(
                            aug_num=1,
                            aug_space=[
                                [
                                    dict(prob=0.5, type='AutoContrast'),
                                ],
                                [
                                    dict(prob=0.4, type='Equalize'),
                                ],
                                [
                                    dict(
                                        level=7,
                                        max_mag=1.25,
                                        min_mag=0.8,
                                        prob=0.7,
                                        type='Brightness'),
                                ],
                                [
                                    dict(
                                        level=5,
                                        max_mag=1.3,
                                        min_mag=0.8,
                                        prob=0.7,
                                        type='Contrast'),
                                ],
                                [
                                    dict(
                                        level=6,
                                        max_mag=1.5,
                                        min_mag=0.8,
                                        prob=0.3,
                                        type='Sharpness'),
                                ],
                            ],
                            type='RandAugment'),
                        dict(
                            aug_num=1,
                            aug_space=[
                                [
                                    dict(
                                        level=7,
                                        max_mag=5.0,
                                        min_mag=0.0,
                                        prob=0.3,
                                        type='Rotate'),
                                ],
                                [
                                    dict(
                                        level=7,
                                        max_mag=3.0,
                                        min_mag=0.0,
                                        prob=0.3,
                                        type='ShearX'),
                                ],
                                [
                                    dict(
                                        level=7,
                                        max_mag=3.0,
                                        min_mag=0.0,
                                        prob=0.3,
                                        type='ShearY'),
                                ],
                                [
                                    dict(
                                        level=7,
                                        max_mag=0.05,
                                        min_mag=0.0,
                                        prob=0.3,
                                        type='TranslateX'),
                                ],
                                [
                                    dict(
                                        level=7,
                                        max_mag=0.05,
                                        min_mag=0.0,
                                        prob=0.3,
                                        type='TranslateY'),
                                ],
                            ],
                            type='RandAugment'),
                    ],
                    type='RandomOrder'),
                dict(
                    n_patches=(
                        1,
                        3,
                    ),
                    ratio=(
                        0,
                        0.15,
                    ),
                    type='RandomErasing'),
                dict(min_gt_bbox_wh=(
                    0.01,
                    0.01,
                ), type='FilterAnnotations'),
                dict(
                    meta_keys=(
                        'img_id',
                        'img_path',
                        'ori_shape',
                        'img_shape',
                        'scale_factor',
                        'flip',
                        'flip_direction',
                        'homography_matrix',
                    ),
                    type='PackDetInputs'),
            ],
            unsup_teacher=[
                dict(
                    keep_ratio=True,
                    scale=[
                        (
                            128,
                            360,
                        ),
                        (
                            256,
                            720,
                        ),
                    ],
                    type='RandomResize'),
                dict(prob=0.5, type='RandomFlip'),
                dict(
                    meta_keys=(
                        'img_id',
                        'img_path',
                        'ori_shape',
                        'img_shape',
                        'scale_factor',
                        'flip',
                        'flip_direction',
                        'homography_matrix',
                    ),
                    type='PackDetInputs'),
            ]),
    ],
    type='CocoDataset')
unsup_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadEmptyAnnotations'),
    dict(
        branch_field=[
            'sup',
            'unsup_teacher',
            'unsup_student',
        ],
        type='MultiBranch',
        unsup_student=[
            dict(
                keep_ratio=True,
                scale=[
                    (
                        128,
                        360,
                    ),
                    (
                        256,
                        720,
                    ),
                ],
                type='RandomResize'),
            dict(prob=0.5, type='RandomFlip'),
            dict(
                transforms=[
                    dict(
                        aug_num=1,
                        aug_space=[
                            [
                                dict(prob=0.5, type='AutoContrast'),
                            ],
                            [
                                dict(prob=0.4, type='Equalize'),
                            ],
                            [
                                dict(
                                    level=7,
                                    max_mag=1.25,
                                    min_mag=0.8,
                                    prob=0.7,
                                    type='Brightness'),
                            ],
                            [
                                dict(
                                    level=5,
                                    max_mag=1.3,
                                    min_mag=0.8,
                                    prob=0.7,
                                    type='Contrast'),
                            ],
                            [
                                dict(
                                    level=6,
                                    max_mag=1.5,
                                    min_mag=0.8,
                                    prob=0.3,
                                    type='Sharpness'),
                            ],
                        ],
                        type='RandAugment'),
                    dict(
                        aug_num=1,
                        aug_space=[
                            [
                                dict(
                                    level=7,
                                    max_mag=5.0,
                                    min_mag=0.0,
                                    prob=0.3,
                                    type='Rotate'),
                            ],
                            [
                                dict(
                                    level=7,
                                    max_mag=3.0,
                                    min_mag=0.0,
                                    prob=0.3,
                                    type='ShearX'),
                            ],
                            [
                                dict(
                                    level=7,
                                    max_mag=3.0,
                                    min_mag=0.0,
                                    prob=0.3,
                                    type='ShearY'),
                            ],
                            [
                                dict(
                                    level=7,
                                    max_mag=0.05,
                                    min_mag=0.0,
                                    prob=0.3,
                                    type='TranslateX'),
                            ],
                            [
                                dict(
                                    level=7,
                                    max_mag=0.05,
                                    min_mag=0.0,
                                    prob=0.3,
                                    type='TranslateY'),
                            ],
                        ],
                        type='RandAugment'),
                ],
                type='RandomOrder'),
            dict(n_patches=(
                1,
                3,
            ), ratio=(
                0,
                0.15,
            ), type='RandomErasing'),
            dict(min_gt_bbox_wh=(
                0.01,
                0.01,
            ), type='FilterAnnotations'),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                    'flip',
                    'flip_direction',
                    'homography_matrix',
                ),
                type='PackDetInputs'),
        ],
        unsup_teacher=[
            dict(
                keep_ratio=True,
                scale=[
                    (
                        128,
                        360,
                    ),
                    (
                        256,
                        720,
                    ),
                ],
                type='RandomResize'),
            dict(prob=0.5, type='RandomFlip'),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                    'flip',
                    'flip_direction',
                    'homography_matrix',
                ),
                type='PackDetInputs'),
        ]),
]
val_cfg = dict(type='TeacherStudentValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='annotations/instances_valid2017.json',
        backend_args=None,
        data_prefix=dict(img='valid/'),
        data_root='/home/coder/trong/KLTN_SEMI/code/data_mmdetection/coco/',
        metainfo=dict(
            classes=(
                'Gay',
                'Me',
                'Mon_dau',
                'Ri_set',
                'Xuoc',
            ),
            palette=[
                (
                    134,
                    34,
                    255,
                ),
                (
                    0,
                    255,
                    206,
                ),
                (
                    255,
                    128,
                    0,
                ),
                (
                    254,
                    0,
                    86,
                ),
                (
                    199,
                    252,
                    0,
                ),
            ]),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                256,
                720,
            ), type='Resize'),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    ann_file=
    '/home/coder/trong/KLTN_SEMI/code/data_mmdetection/coco/annotations/instances_valid2017.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
weak_pipeline = [
    dict(
        keep_ratio=True,
        scale=[
            (
                128,
                360,
            ),
            (
                256,
                720,
            ),
        ],
        type='RandomResize'),
    dict(prob=0.5, type='RandomFlip'),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
            'flip',
            'flip_direction',
            'homography_matrix',
        ),
        type='PackDetInputs'),
]
work_dir = './work_dirs/soft_teacher_custom_40'
